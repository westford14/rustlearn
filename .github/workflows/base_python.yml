name: Python CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup Python
        id: python-setup
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      
      - uses: actions/cache@v4
        id: cache
        with:
          path: .venv
          key: ${{ runner.os }}-${{ steps.python-setup.outputs.python-version }}-${{ hashFiles('py-rustlearn/requirements-dev.txt') }}

      - name: Install deps
        run: |
          cd py-rustlearn && \
          pip install -r requirements-dev.txt && \
          pip install -r requirements-release.txt
      
      - name: Run linters
        run: cd py-rustlearn && tox -e lint

      # TODO: #4
      # - name: Run type checker
      #   run: tox -e type-check
  
  test:
    name: Test
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup Python
        id: python-setup
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      
      - uses: actions/cache@v4
        id: cache
        with:
          path: .venv
          key: ${{ runner.os }}-${{ steps.python-setup.outputs.python-version }}-${{ hashFiles('py-rustlearn/requirements-dev.txt') }}

      - name: Build Virtualenv
        run: |
          pip install virtualenv
          virtualenv .venv

      - name: Install deps
        run: |
          source .venv/bin/activate && \
          cd py-rustlearn && \
          pip install -r requirements-dev.txt && \
          pip install -r requirements-release.txt

      - name: Build the library
        run: |
          source .venv/bin/activate
          maturin develop -m py-rustlearn/Cargo.toml
      
      - name: Run Testing
        run: cd py-rustlearn && tox -e unit
      
      - name: Run unit tests + get coverage
        run: cd py-rustlearn && tox -e coverage
    